{"version":3,"sources":["Questions.js","weeklyQuestions.js","Code.js","NavBar.js","PastProblems.js","gistsLinks.js","Gists.js","App.js","index.js"],"names":["Questions","questions","className","map","question","source","pastproblems","week3qs","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","Code","name","useState","code","setCode","weeksproblem","selectedQuestion","setSelectedQuestion","item","onChange","event","console","log","target","value","type","placeholder","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","onClick","collection","doc","set","then","alert","catch","error","initializeApp","NavBar","signedIn","Navbar","Brand","Toggle","Nav","Link","href","Collapse","Text","auth","signOut","PastProblems","week","Table","striped","bordered","hover","problem","index","gists","Gists","gist","url","file","analytics","App","state","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","GithubAuthProvider","callbacks","signInSuccessWithAuthResult","this","unregisterAuthObserver","onAuthStateChanged","user","setState","currentUser","displayName","path","firebaseAuth","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cda0e3ef.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport ReactMarkdown from 'react-markdown';\n\nexport default function Questions({ questions }) {\n  return (\n    <div className=\"questions\">\n      {questions.map(question => {\n        return (\n          <div>\n       \n            <h3>Q{question[\"num\"]}- {question[\"qName\"]}</h3>\n            <p><ReactMarkdown source={question[\"content\"]}/></p>\n            <hr />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","const week3qs = [\n  { \n      \"num\": 1,\n      \"qName\": \"Test's results\",\n      \"content\": `\nIt's important day today: the class has just had a math test. You will be given a list of marks. Complete the function that will:\n* Calculate the average mark of the whole class and round it to 3 decimal places.\n* Make a dictionary/hash with keys \\`\"h\", \"a\", \"l\"\\` to make clear how many high, average and low marks they got. High marks are 9 & 10, average marks are 7 & 8, and low marks are 1 to 6.\n* Return list \\`[class_average, dictionary]\\` if there are different type of marks, or \\`[class_average, dictionary, \"They did well\"]\\` if there are only high marks.\n\n### Examples\n\n\\`\\`\\`bash\n      [10, 9, 9, 10, 9, 10, 9] ==> [9.429, {'h': 7, 'a': 0, 'l': 0}, 'They did well']\n\n      [5, 6, 4, 8, 9, 8, 9, 10, 10, 10] ==> [7.9, {'h': 5, 'a': 2, 'l': 3}]\n\\`\\`\\`\n\n      `\n    },\n    { \n      \"num\": 2,\n      \"qName\": \"Number = Index\",\n      \"content\": `Given a sorted array of distinct integers, write a function index_equals_value that returns the lowest index for which array[index] == index.\nReturn -1 if there is no such index.\n      \nYour algorithm should be very performant.\n\n### Examples\ninput: \\`[-8, 0, 2, 5]\\`\n\noutput: \\` 2 # since array[2] == 2\\`\n\n\ninput: \\`[-1, 0, 3, 6]\\`\n\noutput: \\`-1 # since no index array satisfies array[index] == index\\`\n`\n    },\n]\nexport const pastproblems = [\n  [\n    {\n      \"week\": 2,\n      \"qName\": \"Divisibility\",\n      \"content\": \"Write a Python program to find those numbers which are divisible by 7 and multiple of 5, between 1500 and 2700 (both included). (Easy)\"\n    },\n    {\n      \"week\": 2,\n      \"qName\": \"Convert Temperature\",\n      \"content\": `Write a Python program to convert temperatures to and from celsius, fahrenheit. (Easy)\n      Formula : c/5 = f-32/9 \n      \n      \n      [ where c = temperature in celsius and f = temperature in fahrenheit ]\n            \n*Expected Output :*\n    \n      60°C is 140 in Fahrenheit\n\n      45°F is 7 in Celsius`\n    },\n    {\n      \"week\": 2,\n      \"qName\": \"Count Even & Odd\",\n      \"content\": `Write a Python program to count the number of even and odd numbers from a series of numbers. (Easy)\n      \nSample numbers : numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9)\n\n*Expected Output* :\n      \n      Number of even numbers : 5\n      \n      Number of odd numbers : 4`\n    },\n    {\n      \"week\": 2,\n      \"qName\": \"Print a pyramid of Astriks\",\n      \"content\": ` Write a Python program to construct the following pattern, using a nested for loop. (Medium) \n\n![Astroks](https://i.imgur.com/G6fwloR.png)\n      `\n    },\n    {\n      \"week\": 2,\n      \"qName\": \"Management (Exteremly Hard)\",\n      \"content\": `\nA company has N members, who are assigned ID numbers 1,...,N.\n\nEvery member, except the member numbered 1 , has exactly one immediate boss with a smaller ID number.\n\nWhen a person X is the immediate boss of a person Y , the person Y is said to be an immediate subordinate of the person X .\n\nYou are given the information that the immediate boss of the member numbered i is the member numbered A i . For each member, find how many immediate subordinates it has.\n      \nThe input form:\n      ![test](https://i.imgur.com/cNryNgO.png)\n\n### Sample Input:\n\n      2\n      2\n      0\n      0\n      0\n\n### Sample Output:\n\n      2\n      2\n      0\n      0\n      0 \n\n      The member numbered 1 has two immediate subordinates: the members numbered 2 and 3 .\n\n      The member numbered 2 has two immediate subordinates: the members numbered 4 and 5 .\n\n      The members numbered 3 , 4 , and 5 do not have immediate subordinates.\n\n\n\n### Sample Input 2\n\n      10\n      1 1 1 1 1 1 1 1 1\n\n### Sample Output 2\n      9\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n\n### Sample Input 3\n      7\n      1 2 3 4 5 6\n\n### Sample Output 3\n      1\n      1\n      1\n      1\n      1\n      1\n      0\n      `\n\n      \n    },\n  ],\n  [\n    {\n      \"week\": 1,\n      \"qName\": \"Even or Odd?\",\n      \"content\": \"Ask the user for a number. Depending on whether the number is even or odd, print out an appropriate message to the user. Hint: how does an even / odd number react differently when divided by 2?\"\n    },\n    { \n      \"week\": 1,\n      \"qName\": \"Find the GCD\",\n      \"content\": \"Use Euclid's algorithm for finding the gcd of two numbers.\"\n    },\n    {\n      \"week\": 1,\n      \"qName\": \"Palindrime Checker\",\n      \"content\": \"Ask the user for a string and print out whether this string is a palindrome or not. (A palindrome is a string that reads the same forwards and backwards.)\"\n    },\n  ]\n]\nexport default week3qs;\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport * as firebase from 'firebase';\nimport Questions from \"./Questions\";\nimport weeksproblem from \"./weeklyQuestions\";\n\nimport AceEditor from \"react-ace\";\n\n\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBQLxaTvjqJKTLeNEae1J2ZeufVUpQfnLM\",\n  authDomain: \"cfp-code-submitter.firebaseapp.com\",\n  databaseURL: \"https://cfp-code-submitter.firebaseio.com\",\n  projectId: \"cfp-code-submitter\",\n  storageBucket: \"cfp-code-submitter.appspot.com\",\n  messagingSenderId: \"483775167429\",\n  appId: \"1:483775167429:web:6c0f89494372bc871829ac\",\n  measurementId: \"G-L6BZEQ6ZJ9\"\n};\n\ntry {\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n} catch { }\n\nvar db = firebase.firestore();\nexport default function Code({ name }) {\n  const [code, setCode] = useState(\n    `def main():\n  pass\nif __name__ == \"__main__\":\n  main()`\n  );\n\n  const [selectedQuestion, setSelectedQuestion] = useState(\n    weeksproblem[0][\"qName\"]\n  );\n  \n  return (\n    <div>\n      <Questions questions={weeksproblem} className=\"currentQs\" />\n\n      <form className=\"codeSubmission\">\n        <p>Select the problem</p>\n        {weeksproblem.map(item => {\n          return (\n            <div\n              onChange={event => {\n                console.log(event.target.value, name, code);\n\n                setSelectedQuestion(event.target.value);\n              }}\n            >\n              <input type=\"radio\" value={item[\"qName\"]} name=\"problem\" />\n              <label>{item[\"qName\"]}</label>\n              <br />\n            </div>\n          );\n        })}\n          <AceEditor\n            className = \"theEditor\"\n            placeholder=\"Insert your Python code\"\n            mode=\"python\"\n            theme=\"monokai\"\n            name=\"blah2\"\n            onChange={(code) => setCode(code)}\n            fontSize={20}\n            showPrintMargin={true}\n            showGutter={true}\n            highlightActiveLine={true}\n            value={code}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }} />\n\n\n\n        <button\n          type='button'\n          className=\"send-button\"\n          onClick={() => {\n            console.log(\"I am clicked\");\n            db.collection(name).doc(selectedQuestion).set({\n              code: code\n            })\n              .then(function () {\n                alert(\"Code Sent successfully\");\n              })\n              .catch(function (error) {\n                alert(\"Error sending, please contact Hatem\");\n                // console.error(\"Error writing document: \", error);\n              });\n\n          }}\n        >\n          Send Code\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport firebase from \"firebase\";\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAW7-NGHjYyEOUWZL9eIvSp-glELUXuq0E\",\n  authDomain: \"inclass-qs.firebaseapp.com\",\n  databaseURL: \"https://inclass-qs.firebaseio.com\",\n  projectId: \"inclass-qs\",\n  storageBucket: \"inclass-qs.appspot.com\",\n  messagingSenderId: \"76230869433\",\n  appId: \"1:76230869433:web:de34cca5ec6ecc92457668\",\n  measurementId: \"G-151K89PMKH\"\n};\ntry {\n  firebase.initializeApp(firebaseConfig);\n} catch {}\n\nexport default function NavBar({ name, signedIn }) {\n  return (\n    <Navbar>\n      <Navbar.Brand>\n        Code for Palestine Online Submitter\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Nav.Link href=\"/main\">Current Week's Problems</Nav.Link>\n      <Nav.Link href=\"/pastproblems\">Past Problems</Nav.Link>\n      <Nav.Link href=\"/gists\">Gists</Nav.Link>\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text>\n          \n          {(signedIn) ? <a>signed in as {name}</a> : <a>You are not signed in</a>}\n          {signedIn ? (\n            <a\n              className=\"singout-button\"\n              onClick={() => firebase.auth().signOut()}\n            >\n              Sign out\n            </a>\n          ) : null}\n        </Navbar.Text>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport { pastproblems } from './weeklyQuestions';\nimport { Table } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport './styles.css';\nexport default function PastProblems() {\n\n  return (\n    <div>\n      { pastproblems.map(week => {\n        return (\n          <div>\n            <h1 className=\"week-in-past-problems\">Week {week[0][\"week\"]}</h1>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Problem</th>\n                  <th>Details</th>\n                </tr>\n              </thead>\n              {week.map((problem, index) => {\n                return (\n                  <tbody>\n                    <tr>\n                      <td>{index+1}</td>\n                      <td>{problem[\"qName\"]}</td>\n                      <td><ReactMarkdown source={problem[\"content\"]}/></td>\n                    </tr>\n                  </tbody>\n                );\n              })}\n\n            </Table>\n          </div>\n        );\n      })}\n    </div>\n  )\n}","export const gists = [\n    {\n        \"fileName\": \"\",\n        \"url\": \"https://gist.github.com/HatemSaadallah/fed98f68174f3671d900074a31a62474\"\n    },\n    {\n        \"fileName\": \"Week2.md\",\n        \"url\": \"https://gist.github.com/HatemSaadallah/fb8a42da2959e2bbcc3e78b35405c456\"\n    },\n    {\n        \"fileName\": \"Week 1.md\",\n        \"url\": \"https://gist.github.com/HatemSaadallah/fb8a42da2959e2bbcc3e78b35405c456\"\n    }\n    \n]","import React, { useState, useEffect } from 'react';\n// import ReactMarkdown from 'react-markdown';\nimport Gist from 'super-react-gist' // <-- import the library\nimport {gists} from './gistsLinks';\n\n\nexport default function Gists() {\n    const [markdown, setMarkdown] = useState(\"\");\n\n    return (\n        <div>\n            {gists.map((gist) => {\n            return <Gist url={gist[\"url\"]}\n            file={gist[\"fileName\"]} />\n\n            })}\n        </div>\n    );\n\n}","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Code from \"./Code\";\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport NavBar from \"./NavBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PastProblems from \"./PastProblems\";\nimport Gists from './Gists';\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBQLxaTvjqJKTLeNEae1J2ZeufVUpQfnLM\",\n  authDomain: \"cfp-code-submitter.firebaseapp.com\",\n  databaseURL: \"https://cfp-code-submitter.firebaseio.com\",\n  projectId: \"cfp-code-submitter\",\n  storageBucket: \"cfp-code-submitter.appspot.com\",\n  messagingSenderId: \"483775167429\",\n  appId: \"1:483775167429:web:6c0f89494372bc871829ac\",\n  measurementId: \"G-L6BZEQ6ZJ9\"\n};\n\ntry{firebase.initializeApp(firebaseConfig);\nfirebase.analytics();}catch{}\n\nexport default class App extends React.Component {\n  state = {\n    isSignedIn: false\n  };\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({ isSignedIn: !!user }));\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <NavBar name=\"hatem\" signedIn={false} />\n          <h1 className=\"welcome-msg\">\n            Welcome to All Code for Palestine Students, TAs, and Instructors\n          </h1>\n          <p className=\"signin-msg\">Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Router>\n          <div>\n\n            <NavBar\n              name={firebase.auth().currentUser.displayName}\n              signedIn={true}\n            />\n            <Switch>\n\n              <Route path=\"/main\">\n                <Code name={firebase.auth().currentUser.displayName}/>\n              </Route>\n              <Route path=\"/pastproblems\">\n                <PastProblems />\n              </Route>\n              <Route path=\"/gists\">\n                <Gists />\n              </Route>\n              <Route path=\"/\">\n              <Code name={firebase.auth().currentUser.displayName}/>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}