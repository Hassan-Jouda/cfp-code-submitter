{"version":3,"sources":["Questions.js","weeklyQuestions.js","Code.js","NavBar.js","PastProblems.js","App.js","index.js"],"names":["Questions","questions","className","map","question","week3qs","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","Code","name","useState","code","setCode","weeksproblem","selectedQuestion","setSelectedQuestion","item","onChange","event","console","log","target","value","type","onValueChange","highlight","languages","js","padding","tabSize","style","fontFamily","fontSize","height","onClick","collection","doc","set","then","catch","error","initializeApp","NavBar","signedIn","Navbar","Brand","Toggle","Nav","Link","href","Collapse","Text","auth","signOut","PastProblems","analytics","App","state","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","GithubAuthProvider","callbacks","signInSuccessWithAuthResult","this","unregisterAuthObserver","onAuthStateChanged","user","setState","currentUser","displayName","path","firebaseAuth","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d60efc7b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nexport default function Questions({ questions }) {\n  return (\n    <div className=\"questions\">\n      {questions.map(question => {\n        return (\n          <div>\n            <h3>Q{question[\"num\"]}- {question[\"qName\"]}</h3>\n            <p>{question[\"content\"]}</p>\n            <hr />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","const week3qs = [\n  { \"num\": 1,\n      \"qName\": \"Print String\",\n      \"content\": \"Write a Python program to print the following string in a specific formatbhukjkjknjknm\"\n    },\n    {\n      \"num\": 2,\n      \"qName\": \"Print\",\n      \"content\": \" Write a Python program to display the current date and time\"\n    },\n]\n\nexport default week3qs;\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport * as firebase from 'firebase';\nimport Questions from \"./Questions\";\nimport weeksproblem from \"./weeklyQuestions\";\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBQLxaTvjqJKTLeNEae1J2ZeufVUpQfnLM\",\n  authDomain: \"cfp-code-submitter.firebaseapp.com\",\n  databaseURL: \"https://cfp-code-submitter.firebaseio.com\",\n  projectId: \"cfp-code-submitter\",\n  storageBucket: \"cfp-code-submitter.appspot.com\",\n  messagingSenderId: \"483775167429\",\n  appId: \"1:483775167429:web:6c0f89494372bc871829ac\",\n  measurementId: \"G-L6BZEQ6ZJ9\"\n};\n\ntry{firebase.initializeApp(firebaseConfig);\nfirebase.analytics();}catch{}\n\nvar db = firebase.firestore();\nexport default function Code({ name }) {\n  const [code, setCode] = useState(\n    `def main():\n      pass\n    if __name__ == \"__main__\":\n      main()`\n  );\n\n  const [selectedQuestion, setSelectedQuestion] = useState(\n    weeksproblem[0][\"qName\"]\n  );\n\n  return (\n    <div>\n      <Questions questions={weeksproblem} className=\"currentQs\" />\n\n      <form className=\"codeSubmission\">\n        <p>Select the problem</p>\n        {weeksproblem.map(item => {\n          return (\n            <div\n              onChange={event => {\n                console.log(event.target.value, name, code);\n\n                setSelectedQuestion(event.target.value);\n              }}\n            >\n              <input type=\"radio\" value={item[\"qName\"]} name=\"problem\" />\n              <label>{item[\"qName\"]}</label>\n              <br />\n            </div>\n          );\n        })}\n        <div className=\"codeblock\">\n          <Editor\n            value={code}\n            onValueChange={code => setCode(code)}\n            highlight={code => highlight(code, languages.js)}\n            padding={10}\n            tabSize={2}\n            style={{\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n              fontSize: 12,\n              height: 320\n            }}\n          />\n        </div>\n\n\n        <button\n        type='button'\n          className=\"send-button\"\n          onClick={() => {\n            console.log(\"I am clicked\");\n            db.collection(name).doc(selectedQuestion).set({\n             code: code\n            })\n              .then(function () {\n                console.log(\"Document successfully written!\");\n              })\n              .catch(function (error) {\n                console.error(\"Error writing document: \", error);\n              });\n\n          }}\n        >\n          Send Code\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport firebase from \"firebase\";\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAW7-NGHjYyEOUWZL9eIvSp-glELUXuq0E\",\n  authDomain: \"inclass-qs.firebaseapp.com\",\n  databaseURL: \"https://inclass-qs.firebaseio.com\",\n  projectId: \"inclass-qs\",\n  storageBucket: \"inclass-qs.appspot.com\",\n  messagingSenderId: \"76230869433\",\n  appId: \"1:76230869433:web:de34cca5ec6ecc92457668\",\n  measurementId: \"G-151K89PMKH\"\n};\ntry {\n  firebase.initializeApp(firebaseConfig);\n} catch {}\n\nexport default function NavBar({ name, signedIn }) {\n  return (\n    <Navbar>\n      <Navbar.Brand>\n        Code for Palestine Online Submitter\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Nav.Link href=\"/main\">Current Week's Problems</Nav.Link>\n      <Nav.Link href=\"/pastproblems\">Past Problems</Nav.Link>\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text>\n          \n          {(signedIn) ? <a>signed in as {name}</a> : <a>You are not signed in</a>}\n          {signedIn ? (\n            <a\n              className=\"singout-button\"\n              onClick={() => firebase.auth().signOut()}\n            >\n              Sign out\n            </a>\n          ) : null}\n        </Navbar.Text>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React from 'react';\n\nexport default function PastProblems(){\n  return(\n    <div>\n      These are the past problems page.\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Code from \"./Code\";\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport NavBar from \"./NavBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PastProblems from \"./PastProblems\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBQLxaTvjqJKTLeNEae1J2ZeufVUpQfnLM\",\n  authDomain: \"cfp-code-submitter.firebaseapp.com\",\n  databaseURL: \"https://cfp-code-submitter.firebaseio.com\",\n  projectId: \"cfp-code-submitter\",\n  storageBucket: \"cfp-code-submitter.appspot.com\",\n  messagingSenderId: \"483775167429\",\n  appId: \"1:483775167429:web:6c0f89494372bc871829ac\",\n  measurementId: \"G-L6BZEQ6ZJ9\"\n};\n\ntry{firebase.initializeApp(firebaseConfig);\nfirebase.analytics();}catch{}\n\nexport default class App extends React.Component {\n  state = {\n    isSignedIn: false\n  };\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({ isSignedIn: !!user }));\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <NavBar name=\"hatem\" signedIn={false} />\n          <h1 className=\"welcome-msg\">\n            Welcome to All Code for Palestine Students, TAs, and Instructors\n          </h1>\n          <p className=\"signin-msg\">Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Router>\n          <div>\n\n            <NavBar\n              name={firebase.auth().currentUser.displayName}\n              signedIn={true}\n            />\n            <Switch>\n\n              <Route path=\"/main\">\n                <Code name={firebase.auth().currentUser.displayName}/>\n              </Route>\n              <Route path=\"/pastproblems\">\n                <PastProblems />\n              </Route>\n              <Route path=\"/\">\n              <Code name={firebase.auth().currentUser.displayName}/>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}